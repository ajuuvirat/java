name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: maven:3.8.8-eclipse-temurin-21
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Application
        run: mvn clean install

      - name: Verify JAR File Exists
        run: |
          ls -lah target/
          if [ ! -f "target/logcheck-0.0.1-SNAPSHOT.jar" ]; then
            echo "JAR file not found!"
            exit 1
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: target/logcheck-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: eclipse-temurin:21-jre-alpine
    env:
      DEPLOY_DIR: "/var/www/html/"
      JAR_FILE: "logcheck-0.0.1-SNAPSHOT.jar"
      SERVER_USER: "root"
      SERVER_HOST: "64.227.145.190"
      JAVA_CMD: "java -jar"

    steps:
      - name: Install Required Packages
        run: apk add --no-cache openssh-client lsof

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-artifact
          path: target

      - name: Verify Downloaded JAR File
        run: |
          ls -lah target/
          if [ ! -f "target/$JAR_FILE" ]; then
            echo "JAR file not found after downloading!"
            exit 1
          fi

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

      - name: Stop Existing Application (If Running)
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST <<EOF
          if command -v lsof &> /dev/null && lsof -t -i:8081 > /dev/null; then
            echo "Stopping application on port 8081..."
            kill -9 \$(lsof -t -i:8081)
          else
            echo "No application running on port 8081."
          fi
          rm -rf $DEPLOY_DIR/*
          mkdir -p $DEPLOY_DIR
          EOF

      - name: Deploy New JAR
        run: scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no target/$JAR_FILE $SERVER_USER@$SERVER_HOST:"$DEPLOY_DIR/"

      - name: Start Application
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST <<EOF
          nohup $JAVA_CMD $DEPLOY_DIR/$JAR_FILE --server.port=8081 > $DEPLOY_DIR/app.log 2>&1 &
          echo "Application successfully started on port 8081."
          EOF
